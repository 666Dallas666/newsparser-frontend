{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nexport let Article1 = /*#__PURE__*/(() => {\n  class Article1 {\n    constructor() {\n      this.id = 0;\n      this.source = \"\";\n      this.tags = \"\";\n      this.author = \"\";\n      this.title = \"\";\n      this.description = \"\";\n      this.coverImage = \"\";\n      this.publishedAt = \"\";\n      this.content = \"\";\n    }\n\n  }\n\n  Article1.ɵfac = function Article1_Factory(t) {\n    return new (t || Article1)();\n  };\n\n  Article1.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Article1,\n    factory: Article1.ɵfac,\n    providedIn: 'root'\n  });\n  return Article1;\n})();\nexport let ShownewsService = /*#__PURE__*/(() => {\n  class ShownewsService {\n    constructor(http, router, _location) {\n      this.http = http;\n      this.router = router;\n      this._location = _location;\n      this.url = 'http://localhost:8085';\n      this.token = \"\";\n    }\n\n    getnews(page = 0) {\n      return this.http.get('/api/v1/news/', {\n        params: {\n          page: page\n        }\n      });\n    }\n\n    getnewsTags(page = 0, tag, createdFrom, createdTo) {\n      if (tag && createdTo && createdFrom) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            tag: tag,\n            createdTo: createdTo,\n            createdFrom: createdFrom\n          }\n        });\n      }\n\n      if (tag && createdFrom) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            tag: tag,\n            createdFrom: createdFrom\n          }\n        });\n      }\n\n      if (tag && createdTo) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            tag: tag,\n            createdTo: createdTo\n          }\n        });\n      }\n\n      if (createdFrom && createdTo) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            createdFrom: createdFrom,\n            createdTo: createdTo\n          }\n        });\n      }\n\n      if (tag) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            tag: tag\n          }\n        });\n      }\n\n      if (createdFrom) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            createdFrom: createdFrom\n          }\n        });\n      }\n\n      if (createdTo) {\n        return this.http.get('/api/v1/news/', {\n          params: {\n            page: page,\n            createdTo: createdTo\n          }\n        });\n      } else return this.http.get('/api/v1/news/', {});\n    }\n\n    changearticle(article) {\n      const headers = {\n        'authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      };\n      this.http.put(this.url + '/articles/' + [article.id], {\n        \"id\": article.id,\n        \"source\": article.source,\n        \"tags\": article.tags.split(\", \"),\n        \"author\": article.author,\n        \"title\": article.title,\n        \"description\": article.description,\n        \"coverImage\": article.coverImage,\n        \"publishedAt\": article.publishedAt,\n        \"content\": article.content\n      }, {\n        headers\n      }).subscribe(resp => this._location.back());\n    }\n\n    createarticle(article) {\n      const headers = {\n        'authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      };\n      this.http.post(this.url + '/articles/', {\n        \"id\": article.id,\n        \"source\": \"none\",\n        \"tags\": article.tags.split(\", \"),\n        \"author\": article.author,\n        \"title\": article.title,\n        \"coverImage\": article.coverImage,\n        \"publishedAt\": Date.now().toString(),\n        \"content\": article.content,\n        \"description\": article.content\n      }, {\n        headers\n      }).subscribe(resp => this._location.back());\n    }\n\n  }\n\n  ShownewsService.ɵfac = function ShownewsService_Factory(t) {\n    return new (t || ShownewsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Location));\n  };\n\n  ShownewsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShownewsService,\n    factory: ShownewsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShownewsService;\n})();","map":null,"metadata":{},"sourceType":"module"}